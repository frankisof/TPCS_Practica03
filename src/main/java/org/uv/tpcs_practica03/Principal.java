/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.uv.tpcs_practica03;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.Query;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author obed
 */
public class Principal extends javax.swing.JFrame {
 int id_venta=1;
 int id=1;
 int cantidad=0;
 int rfc=12134566;

    /**
     * Creates new form Principal
     */
    public Principal() throws SQLException {
        initComponents();
       lista();
       cantidad();
      
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Venta");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 52, 23));

        jLabel2.setText("Cliente");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 62, 25));

        jLabel3.setText("Fecha");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 19));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, -1));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 117, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Costo", "Descripcion", "Existencia", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 480, 110));

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, -1));

        jButton3.setText("+");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));

        jButton4.setText("-");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, -1));

        jButton2.setText("Vender");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        jLabel4.setText("Cantidad");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 120, -1));
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 120, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      buscar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       cantidad=cantidad+1;
       jTextField2.setText("");
       jTextField2.setText(Integer.toString(cantidad));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
     
       if (cantidad>0){
          cantidad=cantidad-1;
          jTextField2.setText("");
          jTextField2.setText(Integer.toString(cantidad));
       }
      
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

     cliente();
     try {
         Venta();
     } catch (ParseException ex) {
         Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
     }
     det_venta();
        producto();
    }//GEN-LAST:event_jButton2ActionPerformed

    public void lista() throws SQLException{
DefaultTableModel model = new DefaultTableModel();
    model.addColumn("clave");
    model.addColumn("Nombre");
    model.addColumn("Direccion");
    model.addColumn("Telefono");
    
    
     Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/tiendita?characterEncoding=UTF-8", "crud", "password");
            Statement statement = connection.createStatement();
            String query = "SELECT * from producto"; // Cambia esta consulta seg√∫n tu base de datos y tabla
            ResultSet resultSet = statement.executeQuery(query);
            Object[]producto = new Object[5];
                     model=(DefaultTableModel)jTable1.getModel();
            
             while (resultSet.next()) {
            producto[0]=resultSet.getInt("id");
            producto[1]=resultSet.getInt("Costo");
            producto[2]=resultSet.getString("Desciption");
            producto[3]=resultSet.getInt("Existencia");
            producto[4]=resultSet.getInt("Precio");
            model.addRow(producto);

           
            }
              jTable1.setModel(model);

}
    public void id_venta(){
    jTextField1.setText(Integer.toHexString(id_venta));
    id_venta=id_venta+1;    
    }
    
    public void cantidad(){
jTextField2.setText(Integer.toString(cantidad));
}
    
    public void det_venta(){
     Det_venta det_venta = new Det_venta();
      int fila= jTable1.getSelectedRow();
      int producto =(int)jTable1.getValueAt(fila, 0);
      String descripcion = (String)jTable1.getValueAt(fila, 2);
      int precio= (int)jTable1.getValueAt(fila, 4);
        det_venta.setCantidad(cantidad);
        det_venta.setDescipcion(descripcion);
        det_venta.setId_producto(producto);
        det_venta.setPrecio(precio);
        
        
        
        Session sesion = Hibernetutil.getSessionFactory().openSession();
        Transaction transaction = sesion.beginTransaction();
        sesion.save(det_venta);
        transaction.commit();
        sesion.clear();
    }
    
    public void cliente(){
    Cliente cliente = new Cliente();
        id=id+1;   
        cliente.setId(id);
        cliente.setNombre(jTextField4.getText());
        cliente.setRfc(rfc+1);
        Session sesion = Hibernetutil.getSessionFactory().openSession();
        Transaction transaction = sesion.beginTransaction();
        sesion.save(cliente);
        transaction.commit();
        sesion.clear();
    }
    
    public void Venta() throws ParseException{
     SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yy");
        String fechaStr = jTextField3.getText();
        Date fecha = formatoFecha.parse(fechaStr);
        int idv = Integer.parseInt(jTextField1.getText());
        
        Venta venta = new Venta();
        venta.setId(idv);
        venta.setFecha(fecha);
        venta.setID_Cliente(1);
          int fila= jTable1.getSelectedRow();
        int precio= (int)jTable1.getValueAt(fila, 4);
       venta.setTotal(precio*cantidad);
         Session sesion = Hibernetutil.getSessionFactory().openSession();
        Transaction transaction = sesion.beginTransaction();
        sesion.save(venta);
        transaction.commit();
        sesion.clear();
    }
    
    public void producto(){
     Session sesion = Hibernetutil.getSessionFactory().openSession();
        int fila= jTable1.getSelectedRow();
 long id_producto = ((Integer) jTable1.getValueAt(fila, 0)).longValue();
        int costo =(int) jTable1.getValueAt(fila, 1);
        String descripcion = (String) jTable1.getValueAt(fila, 2);
        int existencia = (int) jTable1.getValueAt(fila, 3);
        
       Producto producto = sesion.get(Producto.class, id_producto );
       // producto.setCosto(costo);
       // producto.setDesciption(descripcion);
        producto.setExistencia(existencia-cantidad);
      
        
        Transaction transaction = sesion.beginTransaction();
        sesion.update(producto);
        transaction.commit();
        sesion.clear();
    } 
    
    public void buscar(){
        Session sesion = Hibernetutil.getSessionFactory().openSession() ;
       
        long idd = Long.parseLong(jTextField1.getText());
     List<Venta> ventas = sesion.createQuery("FROM Venta WHERE id = :id_venta")
    .setParameter("id_venta", idd)
    .list();
       
     for (Venta venta : ventas) {
        Date fecha = new Date(); // Puedes reemplazar esto con tu objeto Date

        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd"); // Define el formato deseado
        String fechaComoString = formato.format(venta.getFecha());
         jTextField4.setText(Integer.toString(venta.getID_Cliente()));
         jTextField3.setText(fechaComoString);
    System.out.println("ID: " + venta.getId());
    System.out.println("Nombre: " + venta.getFecha());
    System.out.println("RFC: " + venta.getID_Cliente());
    System.out.println("RFC: " + venta.getTotal());
    System.out.println("------------------------------");
}
        Transaction transaction = sesion.beginTransaction();
        
        transaction.commit();
        sesion.clear();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Principal().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
